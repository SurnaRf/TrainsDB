@page "/compositions/delete/{Id:int}"
@using BusinessLayer;
@using ServiceLayer;
@inject GenericManager<TrainComposition, int> trainCompositionManager;
@inject NavigationManager navigationManager;

<h3>Delete</h3>

<h4>Train Composition</h4>
<hr />

<div class="row">
	<div class="col-md-4">
		<EditForm Model="@Model" OnValidSubmit="OnDeleted">
			<DataAnnotationsValidator />
			<ValidationSummary />
			<div class="form-group">
				<label class="control-label"></label>
				<span class="form-control">@Model.Name</span>
				<ValidationMessage For=@( () => Model.Name) />
			</div>
			<br />
			<div class="form-group">
				<input type="submit" value="Delete" class="btn btn-primary" />
			</div>

		</EditForm>
	</div>
</div>

<div>
	<a href="compositions">Back to List</a>
</div>
@code {
	TrainComposition Model = new();

	[Parameter]
	public int Id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Model = await trainCompositionManager.ReadAsync(Id, true, false);
	}

	async Task OnDeleted()
	{
		try
		{
			await trainCompositionManager.DeleteAsync(Model.Id);
			navigationManager.NavigateTo("compositions");
		}
		catch (Exception ex)
		{
			throw ex;
		}
	}
}
