@page "/locations/create"
@using BusinessLayer;
@using ServiceLayer;
@inject GenericManager<Location, int> locationManager;
@inject NavigationManager navigationManager;

<h3>Create</h3>


<h4>Location</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Model" OnValidSubmit="OnCreated">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label class="control-label">Id</label>
                <input @bind-value="Model.Id" class="form-control" />
                <ValidationMessage For="@( () => Model.Id )" />
            </div>
            <div class="form-group">
                <label class="control-label">Name</label>
                <input @bind-value="Model.Name" class="form-control" />
                <ValidationMessage For="@( () => Model.Name )" />
            </div>  
            <div class="form-group">
                <label for="X" class="control-label">X:</label>
                <input id="X" class="form-control" @bind="@Model.Coordinates.X" />
            </div>
            <div class="form-group">
                <label for="Y" class="control-label">Y:</label>
                <input id="Y" class="form-control" @bind="@Model.Coordinates.Y" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </EditForm>
    </div>
</div>

<div>
    <a href="locations">Back to List</a>
</div>

@code
{
    Location Model = new();

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task OnCreated()
    {      
        await locationManager.CreateAsync(Model);
        navigationManager.NavigateTo("locations", true);
    }

}
